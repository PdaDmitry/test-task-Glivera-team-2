{"version":3,"file":"index.js","sources":["../src/js/api.js","../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const names = [\n  'Leanne',\n  'Ervin',\n  'Clementine',\n  'Patricia',\n  'Chelsey',\n  'Dennis',\n  'Kurtis',\n  'Nicholas',\n  'Glenna',\n  'Clementina',\n];\n\nconst lastNames = [\n  'Graham',\n  'Howell',\n  'Bauch',\n  'Lebsack',\n  'Dietrich',\n  'Schulist',\n  'Weissnat',\n  'Runolfsdottir',\n  'Reichert',\n  'DuBuque',\n];\n\nconst companies = [\n  'Yahoo',\n  'Microsoft',\n  'Google',\n  'Tesla',\n  'Adobe',\n  'Foxtrot',\n  'Comfy',\n  'Feacebook',\n  'Rozetca',\n  'Adidas',\n];\n\nconst countries = [\n  'Ukraine',\n  'United States',\n  'Israel',\n  'France',\n  'Germany',\n  'Türkiye',\n  'Spain',\n  'Greece',\n  'Denmark',\n  'Norway',\n];\n\nconst statuses = ['Active', 'Inactive'];\n\nconst operatorCode = [\n  '(205)',\n  '(302)',\n  '(252)',\n  '(629)',\n  '(406)',\n  '(208)',\n  '(704)',\n  '(050)',\n  '(067)',\n  '(099)',\n];\n\nconst num = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nconst randomElem = arr => {\n  const randomIndex = Math.floor(Math.random() * companies.length);\n  const statusesIndex = Math.floor(Math.random() * statuses.length);\n\n  if (arr === statuses) return arr[statusesIndex];\n  return arr[randomIndex];\n};\n\nexport const createCustomer = () => {\n  // let name = randomElem(names);\n  let lastName = randomElem(lastNames);\n  let company = randomElem(companies);\n  let phoneNumder = `${randomElem(operatorCode)} 555-${randomElem(\n    num\n  )}${randomElem(num)}${randomElem(num)}${randomElem(num)}`;\n  let country = randomElem(countries);\n  let email = `@${company.toLowerCase()}.com`;\n  let status = randomElem(statuses);\n\n  return {\n    id: Date.now(),\n    // name,\n    lastName,\n    company,\n    phoneNumder,\n    email,\n    country,\n    status,\n  };\n};\n\n// export const objCustomer = createCustomer();\n// ===============================================================\n","import axios from 'axios';\n\nexport class CustomServer {\n  #numberOfUsers = 8;\n\n  constructor() {\n    this.KEY = '42263617-81d7156b9f7b88cd7b1016c2a';\n    this.URL = 'https://pixabay.com';\n    this.resources = '/api/';\n  }\n\n  async getCustomName(currentPage) {\n    const params = {\n      key: this.KEY,\n      safesearch: true,\n      per_page: this.#numberOfUsers,\n      page: currentPage,\n    };\n\n    const url = `${this.URL}${this.resources}`;\n\n    try {\n      const response = await axios.get(url, { params });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response.status);\n    }\n  }\n\n  get pageSize() {\n    return this.#numberOfUsers;\n  }\n}\n","export function renderCustomer(customers, customerHtml) {\n  const item = customers\n    .map(el => {\n      let { id, user } = el;\n      const { lastName, company, phoneNumder, email, country, status } =\n        customerHtml();\n      const statusClass =\n        status.toLowerCase() === 'active'\n          ? 'status__active'\n          : 'status__inactive';\n      if (user.length > 10) {\n        user = 'Bob';\n      }\n      return `\n          <li class='customer__item'>\n          <span class='customer__info--name'> ${user[0].toUpperCase()}${user.slice(\n        1\n      )} ${lastName}</span>\n            <span class='customer__info--company'> ${company}</span>\n            <span class='customer__info--phoneNumder'> ${phoneNumder}</span>\n            <span class='customer__info--email'> ${user.toLowerCase()}${email}</span>\n            <span class='customer__info--country'> ${country}</span>\n            <span class='customer__info--status ${statusClass}'> ${status}</span>\n          </li>\n      `;\n    })\n    .join('');\n\n  return item;\n}\n\nexport function renderPaginationText(page) {\n  return `<p clas='pagination__text' >Showing data ${page * 8 - 7} to ${\n    page * 8\n  } of  504 entries</p>`;\n}\n\nexport async function renderBattons(page, maxPages) {\n  let buttons = [];\n\n  const prevBtn = document.createElement('button');\n  prevBtn.textContent = '<';\n  prevBtn.classList.add('prev__btn');\n  buttons.push(prevBtn);\n\n  // Determine range of page buttons to show\n  let startPage, endPage;\n\n  // Show a sliding window of 5 buttons\n  if (page <= 3) {\n    startPage = 1;\n    endPage = Math.min(5, maxPages);\n  } else if (page >= maxPages - 2) {\n    startPage = Math.max(maxPages - 4, 1);\n    endPage = maxPages;\n  } else {\n    startPage = page - 2;\n    endPage = page + 2;\n  }\n\n  // Add number buttons dynamically\n  for (let i = startPage; i <= endPage; i++) {\n    const button = document.createElement('button');\n    button.textContent = i;\n    button.classList.add('page__btn');\n    if (i === page) button.classList.add('pressed__btn');\n    buttons.push(button);\n  }\n\n  // Add ellipsis if needed\n  if (endPage < maxPages && page < maxPages - 3) {\n    const ellipsisBtn = document.createElement('button');\n    ellipsisBtn.textContent = '...';\n    ellipsisBtn.classList.add('page__btn');\n    buttons.push(ellipsisBtn);\n  }\n\n  // Add last page button if not in range\n  if (endPage < maxPages) {\n    const lastBtn = document.createElement('button');\n    lastBtn.textContent = maxPages;\n    lastBtn.classList.add('page__btn');\n    // if (page === maxPages) lastBtn.classList.add('pressed__btn'); //!!!!!!!!!!!\n    buttons.push(lastBtn);\n  }\n\n  // Add the next button\n  const nextBtn = document.createElement('button');\n  nextBtn.textContent = '>';\n  nextBtn.classList.add('next__btn');\n  buttons.push(nextBtn);\n\n  return buttons;\n}\n","import { createCustomer } from './js/api.js';\nimport { CustomServer } from './js/pixabay-api.js';\nimport {\n  renderBattons,\n  renderCustomer,\n  renderPaginationText,\n} from './js/render-functions.js';\n\nconst nameCustom = new CustomServer();\n\nconst body = document.querySelector('body');\n\nconst sidebarList = document.querySelector('.sidebar__list');\nconst sidebarButtons = document.querySelectorAll('.sidebar__btn');\nconst contents = document.querySelectorAll('.content');\nconst customersList = document.querySelector('.custom__info');\nconst sidebar = document.querySelector('.sidebar');\nconst contView = document.querySelector('.cont__view');\n// const header = document.querySelector('.header');\n// const main = document.querySelector('.main__wind');\n// ==========================================================================\nconst customBtn = document.getElementById('customers');\n\n// =============================pagination=============================================\nconst paginationElemtText = document.querySelector('.pagination__text');\nconst pageButtonsCont = document.querySelector('.cont__buttons');\n// const paginationElement = document.querySelector('.page-buttons');\nconst prevBtn = document.querySelector('.prev__btn');\nconst nextBtn = document.querySelector('.next__btn');\n\nlet page = 1;\nlet maxPages;\n// console.log(maxPages);\n\nsidebarButtons.forEach(sidebarButton => {\n  sidebarButton.addEventListener('click', () => {\n    const targetContent = sidebarButton.getAttribute('data-content');\n    contents.forEach(content => content.classList.remove('active'));\n\n    if (window.innerWidth <= 767) {\n      sidebar.classList.add('display__none');\n    }\n\n    document.getElementById(targetContent).classList.add('active');\n    contView.classList.remove('display__none');\n\n    if (targetContent === 'customers') {\n      addCustomers(page);\n    }\n  });\n});\n// ============================Back button for all tabs мobile version========================================\ncontents.forEach(section => {\n  const backButton = document.createElement('button');\n\n  backButton.textContent = 'Back';\n  backButton.classList.add('back__button');\n  section.prepend(backButton);\n\n  backButton.addEventListener('click', () => {\n    sidebar.classList.remove('display__none');\n    sidebar.classList.add('sidebar');\n\n    if (window.innerWidth <= 767) {\n      contView.classList.add('display__none');\n    }\n  });\n});\n// ========================================================================\nasync function addCustomers(page) {\n  customersList.innerHTML = '';\n  try {\n    if (page > maxPages) {\n      page = 1;\n    }\n    const data = await nameCustom.getCustomName(page);\n    maxPages = Math.ceil(data.totalHits / nameCustom.pageSize);\n\n    const customerHtml = renderCustomer(data.hits, createCustomer);\n    customersList.insertAdjacentHTML('beforeend', customerHtml);\n    const paginationText = renderPaginationText(page);\n    paginationElemtText.innerHTML = paginationText;\n    renderPagination();\n  } catch (error) {\n    console.log(error);\n  } finally {\n    page += 1;\n  }\n}\n\nasync function renderPagination() {\n  pageButtonsCont.innerHTML = '';\n\n  const buttons = await renderBattons(page, maxPages);\n\n  buttons.forEach(button => {\n    // Apply 'pressed__btn' class to the current page button\n    if (Number(button.textContent) === page) {\n      button.classList.add('pressed__btn');\n    }\n\n    // Add click event listener to each button\n    button.addEventListener('click', () => {\n      let content = button.textContent;\n      let prevPage = page;\n\n      if (content === '>') {\n        if (page < maxPages) {\n          page++;\n        }\n      } else if (content === '<') {\n        if (page > 1) {\n          page--;\n        }\n      } else if (content !== '...') {\n        page = Number(content);\n      }\n\n      if (prevPage === page) return;\n\n      // Fetch customers and update the pagination\n      addCustomers(page);\n      renderPaginationText(page);\n      renderPagination(); // Re-render pagination to update buttons\n    });\n\n    pageButtonsCont.appendChild(button);\n  });\n}\n"],"names":["lastNames","companies","countries","statuses","operatorCode","num","randomElem","arr","randomIndex","statusesIndex","createCustomer","lastName","company","phoneNumder","country","email","status","CustomServer","__privateAdd","_numberOfUsers","currentPage","params","__privateGet","url","axios","error","renderCustomer","customers","customerHtml","el","id","user","statusClass","renderPaginationText","page","renderBattons","maxPages","buttons","prevBtn","startPage","endPage","i","button","ellipsisBtn","lastBtn","nextBtn","nameCustom","sidebarButtons","contents","customersList","sidebar","contView","paginationElemtText","pageButtonsCont","sidebarButton","targetContent","content","addCustomers","section","backButton","data","paginationText","renderPagination","prevPage"],"mappings":"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"}